<?xml version="1.0" encoding="UTF-8"?>
<!--
/****************************************************
**  Edit For Each Project
**
**  You should expect to have to edit the following
**  section for each project.
****************************************************/
-->

<!--Project. Configuration that affects the project as a whole, project name etc.-->

<project basedir="." default="jar" name="org.aptivate.webutils">

    <property name="package" value="org.aptivate.webutils"/>

<!--Compile. Location of source files, destination of compiled files, files to include in compilation etc.-->
    <property name="build.directory" value="tmp"/>
    <property name="source.directory" value="src"/>
    <property name="test.source.directory" value="test"/>
    <property name="lib.directory" value="lib"/>
    <property name="build.compiler" value="modern"/>

	<tstamp/>
	<property name="project.vendor" value="aptivate"/>
	<property name="project.name" value="webutils"/>
	<property name="project.version" value="${DSTAMP}_${TSTAMP}"/> 

	<property name="zip.filename" value="aptivate-webutils-src.zip"/>

<!--Allow shell environment variables to be called with the "env." prefix -->	
	<property environment="env"/>
	
    <path id="classpath">
        <fileset dir="${lib.directory}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

	<!--Distribution. Where the distributable results of the build are placed.-->
    <property name="distribution.directory" value="dist"/>

	<!--Jar. Name of the jar file produced by the build process -->
    <!--name and location of the jar file to build-->
    <property name="jar.directory" value="${distribution.directory}"/>
    <property name="jar.name" value="${package}.jar"/>
    <property name="jar.basedirectory" value="${build.directory}"/>

    <!--exclude all unit test files from the jar file-->
    <!-- <property name="jar.excludes" value="**/test/**"/> -->

<!--Resources. The location of other resources other than source code-->
    <property name="jsp.directory" value="jsp"/>    

<!--
/****************************************************
**  Restricted Edit
**
**  You shouldn't have to edit anything below. 
****************************************************/ -->



<!--
/*****************************************************
**  Initialise
******************************************************/-->
    <target name="init">
        <tstamp/>
    </target>
	
<!--
/*****************************************************
**  Compile: Delete the build directory, recreate it and compile all the source code
******************************************************/-->
    <target name="compile" depends="init" unless="build.compiled">
        <delete dir="${build.directory}"/>
        <mkdir dir="${build.directory}"/>
		<javac classpathref="classpath" 
			srcdir="${source.directory}" 
			destdir="${build.directory}"
			source="1.5" target="1.5" debug="yes" />
        <copy todir="${build.directory}">
            <fileset dir="${source.directory}">
                <include name="**/*.xsl"/>
                <include name="**/*.html"/>
            	<include name="**/*.js"/>
            </fileset>
        </copy>
		<property name="build.compiled" value="true"/>
    </target>
	
	<target name="javac">
		<javac debug="on" optimize="off"
        	destdir="${build.directory}"
			includes="**/*.java">
        	<src path="${source.directory}" />
			<classpath refid="classpath"/>
        </javac>
	</target>
	
<!--
/*****************************************************
**  Compile Tests: Compile all the source code in test dir
******************************************************/-->
    <target name="compile-tests" depends="compile">
        <javac deprecation="on" debug="on" optimize="off" destdir="${build.directory}" srcdir="${test.source.directory}">
            <classpath refid="classpath"/>
        </javac>
        <copy todir="${build.directory}">
            <fileset dir="${test.source.directory}">
                <include name="*.properties"/>
                <include name="**/*.properties"/>
            </fileset>
        </copy>
    </target>

<!--
/*****************************************************
**  Compile Tests: Compile all the source code in test dir
**    Assume that compile has already happened, to save us
**    compiling the main stuff twice.  But have check aswell
******************************************************/-->
    <target name="compile-tests-after-war">
		<fail message="Compile has not happened" unless="build.compiled"/>
        <javac deprecation="on" debug="on" optimize="off" destdir="${build.directory}" srcdir="${test.source.directory}">
            <classpath refid="classpath"/>
        </javac>
        <copy todir="${build.directory}">
            <fileset dir="${test.source.directory}">
                <include name="*.properties"/>
                <include name="**/*.properties"/>
            </fileset>
        </copy>
    </target>

<!--
/*****************************************************
**  Build Jar file
******************************************************/
-->
    <target name="jar" depends="compile">
        <mkdir dir="${jar.directory}"/>
        <jar jarfile="${jar.directory}/${jar.name}" basedir="${jar.basedirectory}">
		  <manifest>
		    <section name="${package}">
		      <attribute name="Implementation-Vendor" value="${project.vendor}"/>
		      <attribute name="Implementation-Title" value="${project.name}"/>
		      <attribute name="Implementation-Version" value="${project.version}"/> 
		    </section>
		  </manifest>
        </jar>
    </target>

<!--
/*****************************************************
**  Build .War file
******************************************************/-->
    <target name="war" depends="jar">
        <mkdir dir="${war.directory}"/>
        <war warfile="${war.directory}/${war.filename}" webxml="${war.webxml}">
            <classes dir="${build.directory}">
                <include name="*.*"/>
                <exclude name="web.xml"/>
            </classes>
            <classes dir="${properties.directory}">
                <include name="*.properties"/>
            </classes>
            <lib dir="${lib.directory}">
                <include name="*.jar"/>
                <include name="*.zip"/>
                <exclude name="servlet.jar"/>
                <exclude name="xercesImpl.jar"/>
            </lib>
            <lib dir="${jar.directory}">
                <include name="*.jar"/>
            </lib>
            <fileset dir="${jsp.directory}">
            	<exclude name="WEB-INF/web.xml"/>
        	</fileset>
        </war>
    </target>

	<target name="zip" depends="jar">
        <mkdir dir="${distribution.directory}"/>
		<delete file="${distribution.directory}/${zip.filename}" />
        <zip destfile="${distribution.directory}/${zip.filename}" basedir=".">
		  	<exclude name="bin/**" />
		  	<exclude name="tmp/**" />
		  	<exclude name="work/**" />
			<exclude name="web/WEB-INF/classes/**" />
			<exclude name="${distribution.directory}/${zip.filename}" />
        </zip>
    </target>
</project>
